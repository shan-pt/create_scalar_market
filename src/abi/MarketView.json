[
  {
    "inputs": [
      {
        "internalType": "contract IMarketFactory",
        "name": "marketFactory",
        "type": "address"
      },
      {
        "internalType": "contract Market",
        "name": "market",
        "type": "address"
      }
    ],
    "name": "getMarket",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "id",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "marketName",
            "type": "string"
          },
          {
            "internalType": "string[]",
            "name": "outcomes",
            "type": "string[]"
          },
          {
            "components": [
              {
                "internalType": "address",
                "name": "id",
                "type": "address"
              },
              {
                "internalType": "string",
                "name": "marketName",
                "type": "string"
              },
              {
                "internalType": "string[]",
                "name": "outcomes",
                "type": "string[]"
              },
              {
                "internalType": "address[]",
                "name": "wrappedTokens",
                "type": "address[]"
              },
              {
                "internalType": "bytes32",
                "name": "conditionId",
                "type": "bytes32"
              },
              {
                "internalType": "bool",
                "name": "payoutReported",
                "type": "bool"
              },
              {
                "internalType": "uint256[]",
                "name": "payoutNumerators",
                "type": "uint256[]"
              }
            ],
            "internalType": "struct MarketView.ParentMarketInfo",
            "name": "parentMarket",
            "type": "tuple"
          },
          {
            "internalType": "uint256",
            "name": "parentOutcome",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "collateralToken",
            "type": "address"
          },
          {
            "internalType": "address[]",
            "name": "wrappedTokens",
            "type": "address[]"
          },
          {
            "internalType": "uint256",
            "name": "outcomesSupply",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lowerBound",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "upperBound",
            "type": "uint256"
          },
          {
            "internalType": "bytes32",
            "name": "parentCollectionId",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "collateralToken1",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "collateralToken2",
            "type": "address"
          },
          {
            "internalType": "bytes32",
            "name": "conditionId",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "questionId",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "templateId",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "content_hash",
                "type": "bytes32"
              },
              {
                "internalType": "address",
                "name": "arbitrator",
                "type": "address"
              },
              {
                "internalType": "uint32",
                "name": "opening_ts",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "timeout",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "finalize_ts",
                "type": "uint32"
              },
              {
                "internalType": "bool",
                "name": "is_pending_arbitration",
                "type": "bool"
              },
              {
                "internalType": "uint256",
                "name": "bounty",
                "type": "uint256"
              },
              {
                "internalType": "bytes32",
                "name": "best_answer",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "history_hash",
                "type": "bytes32"
              },
              {
                "internalType": "uint256",
                "name": "bond",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "min_bond",
                "type": "uint256"
              }
            ],
            "internalType": "struct IRealityETH_v3_0.Question[]",
            "name": "questions",
            "type": "tuple[]"
          },
          {
            "internalType": "bytes32[]",
            "name": "questionsIds",
            "type": "bytes32[]"
          },
          {
            "internalType": "string[]",
            "name": "encodedQuestions",
            "type": "string[]"
          },
          {
            "internalType": "bool",
            "name": "payoutReported",
            "type": "bool"
          },
          {
            "internalType": "uint256[]",
            "name": "payoutNumerators",
            "type": "uint256[]"
          }
        ],
        "internalType": "struct MarketView.MarketInfo",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "count",
        "type": "uint256"
      },
      {
        "internalType": "contract IMarketFactory",
        "name": "marketFactory",
        "type": "address"
      }
    ],
    "name": "getMarkets",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "id",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "marketName",
            "type": "string"
          },
          {
            "internalType": "string[]",
            "name": "outcomes",
            "type": "string[]"
          },
          {
            "components": [
              {
                "internalType": "address",
                "name": "id",
                "type": "address"
              },
              {
                "internalType": "string",
                "name": "marketName",
                "type": "string"
              },
              {
                "internalType": "string[]",
                "name": "outcomes",
                "type": "string[]"
              },
              {
                "internalType": "address[]",
                "name": "wrappedTokens",
                "type": "address[]"
              },
              {
                "internalType": "bytes32",
                "name": "conditionId",
                "type": "bytes32"
              },
              {
                "internalType": "bool",
                "name": "payoutReported",
                "type": "bool"
              },
              {
                "internalType": "uint256[]",
                "name": "payoutNumerators",
                "type": "uint256[]"
              }
            ],
            "internalType": "struct MarketView.ParentMarketInfo",
            "name": "parentMarket",
            "type": "tuple"
          },
          {
            "internalType": "uint256",
            "name": "parentOutcome",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "collateralToken",
            "type": "address"
          },
          {
            "internalType": "address[]",
            "name": "wrappedTokens",
            "type": "address[]"
          },
          {
            "internalType": "uint256",
            "name": "outcomesSupply",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lowerBound",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "upperBound",
            "type": "uint256"
          },
          {
            "internalType": "bytes32",
            "name": "parentCollectionId",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "collateralToken1",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "collateralToken2",
            "type": "address"
          },
          {
            "internalType": "bytes32",
            "name": "conditionId",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "questionId",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "templateId",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "content_hash",
                "type": "bytes32"
              },
              {
                "internalType": "address",
                "name": "arbitrator",
                "type": "address"
              },
              {
                "internalType": "uint32",
                "name": "opening_ts",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "timeout",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "finalize_ts",
                "type": "uint32"
              },
              {
                "internalType": "bool",
                "name": "is_pending_arbitration",
                "type": "bool"
              },
              {
                "internalType": "uint256",
                "name": "bounty",
                "type": "uint256"
              },
              {
                "internalType": "bytes32",
                "name": "best_answer",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "history_hash",
                "type": "bytes32"
              },
              {
                "internalType": "uint256",
                "name": "bond",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "min_bond",
                "type": "uint256"
              }
            ],
            "internalType": "struct IRealityETH_v3_0.Question[]",
            "name": "questions",
            "type": "tuple[]"
          },
          {
            "internalType": "bytes32[]",
            "name": "questionsIds",
            "type": "bytes32[]"
          },
          {
            "internalType": "string[]",
            "name": "encodedQuestions",
            "type": "string[]"
          },
          {
            "internalType": "bool",
            "name": "payoutReported",
            "type": "bool"
          },
          {
            "internalType": "uint256[]",
            "name": "payoutNumerators",
            "type": "uint256[]"
          }
        ],
        "internalType": "struct MarketView.MarketInfo[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "questionId",
        "type": "bytes32"
      },
      {
        "internalType": "contract IRealityETH_v3_0",
        "name": "realitio",
        "type": "address"
      }
    ],
    "name": "getQuestionId",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
]
